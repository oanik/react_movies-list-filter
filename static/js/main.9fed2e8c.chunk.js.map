{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","searchTerm","className","src","alt","cn","highlight","toLowerCase","includes","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchBar","state","query","handleSearch","event","target","name","value","setState","props","onSubmit","htmlFor","type","id","placeholder","this","onChange","React","Component","App","moviesFromServer","visibleMoviesList","searchParam","onSearchSubmit","term","trim","filter","ReactDOM","render","document","getElementById"],"mappings":"uyEAMaA,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,WAAxC,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKJ,EACLK,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAWG,IAAG,QAAS,CAAEC,UAAWL,GAAcJ,EAAMU,cAAcC,SAASP,EAAWM,kBAAoBV,KAIrH,yBAAKK,UAAWG,IAAG,UAAW,CAAEC,UAAWL,GAAcH,EAAYS,cAAcC,SAASP,EAAWM,kBACpGT,EACD,6BACA,uBAAGW,KAAMT,GAAT,aAcRJ,EAAUc,aAAe,CACvBZ,YAAa,IC3CR,IAAMa,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQX,EAAX,EAAWA,WAAX,OACxB,yBAAKC,UAAU,UACZU,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eACEC,IAAKD,EAAME,QACPF,EAFN,CAGEb,WAAYA,UAkBpBU,EAAWD,aAAe,CACxBE,OAAQ,I,WC5BGK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,IACxB,EAAKE,MAAMC,SAASH,IATxB,uDAaI,OACE,yBAAKtB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO0B,QAAQ,eAAe1B,UAAU,SAAxC,gBAGA,yBAAKA,UAAU,WACb,2BACE2B,KAAK,OACLC,GAAG,eACH5B,UAAU,QACV6B,YAAY,mBACZR,KAAK,QACLC,MAAOQ,KAAKd,MAAMC,MAClBc,SAAUD,KAAKZ,sBA3B7B,GAA+Bc,IAAMC,W,OCIxBC,EAAb,4MACElB,MAAQ,CACNN,OAAQyB,EACRC,kBAAmBD,EACnBE,YAAa,IAJjB,EAOEC,eAAiB,SAACC,GAChB,IAAMtB,EAAQsB,EAAKC,OAEnB,EAAKjB,UAAS,SAAAP,GAAK,MAAgB,KAAVC,EACrB,CAAEmB,kBAAkB,YAAKpB,EAAMN,SAC/B,CAAE0B,kBAAmBpB,EAAMN,OAAO+B,QAAO,SAAA7B,GAAK,OAAgE,IAA5DA,EAAMjB,MAAMU,cAAcC,SAASW,EAAMZ,iBACtB,IAAlEO,EAAMhB,YAAYS,cAAcC,SAASW,EAAMZ,sBACtD,EAAKkB,SAAS,CAAEc,YAAapB,KAdjC,uDAiBY,IAAD,EACoCa,KAAKd,MAAxCoB,EADD,EACCA,kBAAmBC,EADpB,EACoBA,YAE3B,OACE,yBAAKrC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAWyB,SAAUK,KAAKQ,iBAC1B,kBAAC,EAAD,CACE5B,OAAQ0B,EACRrC,WAAYsC,KAGhB,yBAAKrC,UAAU,WAAf,0BA7BR,GAAyBiC,aCFzBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9fed2e8c.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl, searchTerm }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className={cn('title', { highlight: searchTerm && title.toLowerCase().includes(searchTerm.toLowerCase()) })}>{title}</p>\n        </div>\n      </div>\n\n      <div className={cn('content', { highlight: searchTerm && description.toLowerCase().includes(searchTerm.toLowerCase()) })}>\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, searchTerm }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        {...movie}\n        searchTerm={searchTerm}\n      />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  searchTerm: PropTypes.string.isRequired,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchBar extends React.Component {\n  state = {\n    query: '',\n  }\n\n  handleSearch = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n    this.props.onSubmit(value);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              name=\"query\"\n              value={this.state.query}\n              onChange={this.handleSearch}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchBar } from './components/SearchBar/SearchBar';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n    visibleMoviesList: moviesFromServer,\n    searchParam: '',\n  }\n\n  onSearchSubmit = (term) => {\n    const query = term.trim();\n\n    this.setState(state => ((query === '')\n      ? { visibleMoviesList: [...state.movies] }\n      : { visibleMoviesList: state.movies.filter(movie => movie.title.toLowerCase().includes(query.toLowerCase()) === true\n        || movie.description.toLowerCase().includes(query.toLowerCase()) === true) }));\n    this.setState({ searchParam: query });\n  }\n\n  render() {\n    const { visibleMoviesList, searchParam } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchBar onSubmit={this.onSearchSubmit} />\n          <MoviesList\n            movies={visibleMoviesList}\n            searchTerm={searchParam}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}