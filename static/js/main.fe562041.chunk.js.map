{"version":3,"sources":["components/TextStyle/TextStyle.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["TextStyle","textHighlight","text","query","__html","split","map","word","toLowerCase","includes","join","render","this","props","data","isHighlighted","searchTerm","dangerouslySetInnerHTML","React","Component","defaultProps","MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","movie","key","imdbId","SearchBar","state","handleSearch","event","target","name","value","setState","onSubmit","htmlFor","type","id","placeholder","onChange","App","moviesFromServer","visibleMoviesList","searchParam","onSearchSubmit","term","trim","filter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe562041.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TextStyle extends React.Component {\ntextHighlight = (text, query) => {\n  const newText = text.split(' ');\n  const result = newText.map(word => ((word.toLowerCase().includes(query) === true)\n    ? (\n      `<span class=\"highlight\">\n        ${word}\n      </span>`\n    ) : word)).join(' ');\n\n  return { __html: result };\n}\n\nrender() {\n  const { data, isHighlighted, searchTerm } = this.props;\n  let render;\n\n  if (isHighlighted) {\n    render = (\n      <p\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={this.textHighlight(data, searchTerm)}\n      />\n    );\n  } else {\n    render = <p>{data}</p>;\n  }\n\n  return (\n    <>\n      {render}\n    </>\n  );\n}\n}\nTextStyle.defaultProps = {\n  data: '',\n};\nTextStyle.propTypes = {\n  data: PropTypes.string,\n  searchTerm: PropTypes.string.isRequired,\n  isHighlighted: PropTypes.bool.isRequired,\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextStyle } from '../TextStyle';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl, searchTerm, isHighlighted }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title\">\n            <TextStyle data={title} isHighlighted={isHighlighted} searchTerm={searchTerm} />\n\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <TextStyle data={description} isHighlighted={isHighlighted} searchTerm={searchTerm} />\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  isHighlighted: PropTypes.bool.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, searchTerm, isHighlighted }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        {...movie}\n        searchTerm={searchTerm}\n        isHighlighted={isHighlighted}\n      />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  searchTerm: PropTypes.string.isRequired,\n  isHighlighted: PropTypes.bool.isRequired,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchBar extends React.Component {\n  state = {\n    query: '',\n  }\n\n  handleSearch = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n    this.props.onSubmit(value);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              name=\"query\"\n              value={this.state.query}\n              onChange={this.handleSearch}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchBar } from './components/SearchBar/SearchBar';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n    visibleMoviesList: moviesFromServer,\n    searchParam: '',\n    isHighlighted: false,\n  }\n\n  onSearchSubmit = (term) => {\n    const query = term.trim().toLowerCase();\n\n    this.setState(state => ((query === '')\n      ? {\n        visibleMoviesList: [...state.movies],\n        isHighlighted: false,\n      }\n      : {\n        visibleMoviesList: state.movies.filter(movie => (movie.title + movie.description).toLowerCase().includes(query) === true),\n        isHighlighted: true,\n      }));\n    this.setState({ searchParam: query });\n  }\n\n  render() {\n    const\n      { visibleMoviesList\n        , searchParam,\n        isHighlighted } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchBar onSubmit={this.onSearchSubmit} />\n          <MoviesList\n            movies={visibleMoviesList}\n            searchTerm={searchParam}\n            isHighlighted={isHighlighted}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}